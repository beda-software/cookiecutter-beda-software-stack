stages:
  - build
  - test
  - release
  - deploy

variables:
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME
  BUILD_IMAGE: $CI_REGISTRY_IMAGE:$CI_BUILD_REF
  CACHE_IMAGE: $CI_REGISTRY_IMAGE:latest
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

services:
  - docker:19-dind

build:
  stage: build
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker pull $CACHE_IMAGE || true
    - docker build --cache-from $CACHE_IMAGE -t $BUILD_IMAGE -t $CACHE_IMAGE .
    - docker push $BUILD_IMAGE
    - docker push $CACHE_IMAGE

test:
  stage: test
  image: tmaier/docker-compose:19
  script: ./run_test.sh
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - docker pull $BUILD_IMAGE
  after_script:
    - docker-compose -f docker-compose.tests.yaml down
  artifacts:
    paths:
    - ./htmlcov
  only:
    - branches
    - tags

release:
  stage: release
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - docker pull $BUILD_IMAGE
  script:
    - docker tag $BUILD_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - master
    - staging
    - develop

deploy:
  stage: deploy
  image: registry.bro.engineering/ansible_deploy/helm_deploy:master
  script:
    - cd ./chart
    - ./deploy.sh $CI_COMMIT_SHA
  only:
    - master
    - staging
    - develop
